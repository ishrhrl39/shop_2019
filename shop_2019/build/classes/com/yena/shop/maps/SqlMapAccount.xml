<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="SqlMapAccount">
	<typeAlias alias="user" type="com.yena.shop.model.User" />
	<typeAlias alias="withDraw" type="com.yena.shop.model.WithDraw" />
	<typeAlias alias="WithDrawLog" type="com.yena.shop.model.WithDrawLog" />
		
	
	<!-- 회원가입  -->
	<insert id="insertUser" parameterClass="user">
		INSERT INTO USER
			(ID
			,PASS_WD
			,NAME
			,EMAIL
			,BIRTH
			,GENDER
			,TEL
			,ADULT_YN
			,REG_DTM
			,UPD_DTM
			,USE_YN) 
			VALUES
			(
				#id#,      
				#pass_wd#, 
				#name#,    
				#email#,   
				#birth#,   
				#gender#,  
				#tel#,     
				#adult_yn#,
				#reg_dtm#, 
				#upd_dtm#, 
				#use_yn#
			)		
	</insert>
	
	<!-- 아이디 중복체크  -->
	<select id="duplCheckId" parameterClass="java.lang.String" resultClass="int">
		SELECT COUNT(ID) AS CNT FROM USER WHERE ID = #id#
	</select>	
	
	<!-- 회원 목록 조회 -->
	<select id="selectUser" parameterClass="map" resultClass="user">
		SELECT
			ID
			,PASS_WD
			,NAME
			,EMAIL
			,BIRTH
			,GENDER
			,TEL
			,ADULT_YN
			,REG_DTM
			,UPD_DTM
			,USE_YN
		FROM USER
			WHERE 1=1
			<isNotNull property="searchColumn">
				AND 
				<isEqual property="searchColumn" compareValue="id">
					ID LIKE CONCAT ('%',#searchValue#, '%')
				</isEqual>
				<isEqual property="searchColumn" compareValue="name">
					NAME LIKE CONCAT ('%',#searchValue#, '%')
				</isEqual>
				<isEqual property="searchColumn" compareValue="email">
					EMAIL LIKE CONCAT ('%',#searchValue#, '%')
				</isEqual>
				<isEqual property="searchColumn" compareValue="tel">
					TEL LIKE CONCAT ('%',#searchValue#, '%')
				</isEqual>
			</isNotNull>
			<isNull property="searchColumn">
				ORDER BY REG_DTM DESC
				<isNotNull property="LIMIT">
					LIMIT #LIMIT#
				</isNotNull>
				<isNotNull property="OFFSET">
					OFFSET #OFFSET#
				</isNotNull>
			</isNull>
	</select>
	
	<!-- 회원 전체 개수 조회 -->
	<select id="selectTotalUserCount" parameterClass="map" resultClass="int">
		SELECT 
			COUNT(*) AS CNT 
		FROM USER 
			WHERE 1=1
			<isNotNull property="searchColumn">
				AND 
				<isEqual property="searchColumn" compareValue="id">
					ID LIKE CONCAT ('%',#searchValue#, '%')
				</isEqual>
				<isEqual property="searchColumn" compareValue="name">
					NAME LIKE CONCAT ('%',#searchValue#, '%')
				</isEqual>
				<isEqual property="searchColumn" compareValue="email">
					EMAIL LIKE CONCAT ('%',#searchValue#, '%')
				</isEqual>
				<isEqual property="searchColumn" compareValue="tel">
					TEL LIKE CONCAT ('%',#searchValue#, '%')
				</isEqual>
			</isNotNull>
	</select>
	
	<!-- 회원 정보 조회 -->
	<select id="selectUserOne" parameterClass="user" resultClass="user">
		SELECT 
			ID
			,NAME
			,EMAIL
			,BIRTH
			,GENDER
			,TEL
			,ADULT_YN
			,REG_DTM
			,UPD_DTM
			,USE_YN
		FROM
			USER
		WHERE 1=1
			<isNotNull property="id">
				AND ID = #id#
			</isNotNull>
			<isNotNull property="pass_wd">
				AND PASS_WD = #pass_wd#
			</isNotNull>
			<isNotNull property="tel">
				AND TEL = #tel#
			</isNotNull>
			<isNotNull property="name">
				AND NAME = #name#
			</isNotNull>
			<isNotNull property="name">
				AND BIRTH = #birth#
			</isNotNull>
			<isNotNull property="email">
				AND EMAIL = #email#
			</isNotNull>
	</select>
	
	<!-- 회원정보 수정  -->
	<update id="updateUser" parameterClass="user">
		UPDATE
			USER
		SET			
			<isNotNull property="pass_wd">PASS_WD = #pass_wd#,</isNotNull>
			<isNotNull property="email">EMAIL = #email#,</isNotNull>
			<isNotNull property="tel">TEL = #tel#,</isNotNull>
			<isNotNull property="use_yn">USE_YN = #use_yn#,</isNotNull>
			UPD_DTM = DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
		WHERE
			ID = #id#
	</update>
	
	<!-- 회원 탈퇴사유 조회 -->
	<select id="selectWithDraw" resultClass="withDraw">
		SELECT 
			WITHDRAW_CD,
			WITHDRAW_COMMENT
		FROM
			WITHDRAW
				ORDER BY WITHDRAW_CD
	</select> 
	
	<!-- 회원 탈퇴사유 로그 남기기 -->
	<insert id="insertWithdrawLog" parameterClass="WithDrawLog">
		INSERT INTO 
			WITHDRAW_LOG
		(
			WITHDRAW_CD,
			ID,
			WITHDRAW_DTM
		) 
		VALUES 
		(
			#withdraw_cd#,
			#id#,
			DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
		)
	</insert>
	
	
	<select id="findUserById" parameterClass="java.lang.String" resultClass="user">
		SELECT * FROM USER WHERE ID = #id#
	</select>
</sqlMap>